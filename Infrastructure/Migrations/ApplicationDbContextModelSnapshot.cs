// <auto-generated />
using System;
using Infrastructure.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Aggregates.DistributorAggregate.Distributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeleteAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HierarchyLevel")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastChangeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Recomendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Recommendedby")
                        .HasColumnType("int");

                    b.Property<string>("SecondaryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.ToTable("Distributor");
                });

            modelBuilder.Entity("Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeleteAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastChangeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecondaryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Domain.Aggregates.TransactionAggregate.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeleteAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.Property<string>("DistributorSecondaryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastChangeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondaryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SaleDate");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Domain.Aggregates.DistributorAggregate.Distributor", b =>
                {
                    b.OwnsOne("Domain.Aggregates.DistributorAggregate.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("DistributorId")
                                .HasColumnType("int");

                            b1.Property<int>("AddressType")
                                .HasColumnType("int");

                            b1.Property<string>("FullAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DistributorId");

                            b1.ToTable("Distributor");

                            b1.WithOwner()
                                .HasForeignKey("DistributorId");
                        });

                    b.OwnsOne("Domain.Aggregates.DistributorAggregate.ValueObjects.ContactInformation", "ContactInformation", b1 =>
                        {
                            b1.Property<int>("DistributorId")
                                .HasColumnType("int");

                            b1.Property<int>("ContactType")
                                .HasColumnType("int");

                            b1.Property<string>("CotactInformation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DistributorId");

                            b1.ToTable("Distributor");

                            b1.WithOwner()
                                .HasForeignKey("DistributorId");
                        });

                    b.OwnsOne("Domain.Aggregates.DistributorAggregate.ValueObjects.IdInformation", "IdInformation", b1 =>
                        {
                            b1.Property<int>("DistributorId")
                                .HasColumnType("int");

                            b1.Property<string>("DocumentNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DocumentSeria")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("DocumentType")
                                .HasColumnType("int");

                            b1.Property<DateTime>("ExpirationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("IdNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Organization")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ReleaseDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("DistributorId");

                            b1.ToTable("Distributor");

                            b1.WithOwner()
                                .HasForeignKey("DistributorId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("IdInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
